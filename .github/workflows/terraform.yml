name: Terraform CI/CD

on:
  push:
    branches:
      - dev
      - prod

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Print the branch name
      - name: Display Branch Name
        run: |
          echo "**********"
          echo "Branch: $GITHUB_REF"
          echo "**********"

      # Extract the branch name from GITHUB_REF (e.g., refs/heads/dev -> dev)
      - name: Set Branch Name
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          echo "Branch name: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Check if environment is valid (only dev, prod allowed)
      - name: Check if environment is valid
        run: |
          VALID_ENVS=("dev" "prod")
          if [[ ! " ${VALID_ENVS[@]} " =~ " ${BRANCH_NAME} " ]]; then
            echo "Invalid environment: $BRANCH_NAME"
            exit 1
          fi
          echo "Valid environment: $BRANCH_NAME, proceeding with Terraform steps."

      # Install Terraform
      - name: Install Terraform
        run: |
          # Add HashiCorp GPG key
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          
          # Add HashiCorp repository
          sudo apt update -y
          sudo apt install -y software-properties-common
          sudo add-apt-repository "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com ubuntu-$(lsb_release -c | awk '{print $2}') main"
          
          # Update package list and install Terraform
          sudo apt update -y
          sudo apt install -y terraform


      # Terraform init
      - name: Terraform Init
        run: |
          if [ -d "$BRANCH_NAME" ]; then
            cd $BRANCH_NAME
            terraform init
          else
            echo "Directory $BRANCH_NAME does not exist, skipping terraform init."
          fi

      # Terraform plan
      - name: Terraform Plan
        run: |
          if [ -d "$BRANCH_NAME" ]; then
            cd $BRANCH_NAME
            terraform plan
          else
            echo "Directory $BRANCH_NAME does not exist, skipping terraform plan."
          fi

      # Terraform apply
      - name: Terraform Apply
        run: |
          if [ -d "$BRANCH_NAME" ]; then
            cd $BRANCH_NAME
            terraform apply -auto-approve
          else
            echo "Directory $BRANCH_NAME does not exist, skipping terraform apply."
          fi
